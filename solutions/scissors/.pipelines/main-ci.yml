# build, test (to be built) and push to container registry


trigger: main
pr: none

variables:
  imageRepository: "scissors"
  imageTag: '$(Build.BuildId)'
  workingDir: '$(Build.SourcesDirectory)/solutions/scissors'
  unittest_reportprefix: 'mythicalrtspcapture'
  pythonversion: '3.9'
  srcRepoName: "MythicalKAN"
  opsRepoName: "MythicalArcOps"

pool:
  vmImage: ubuntu-latest

steps:
  - checkout: self

  - task: AzureKeyVault@2
    inputs:
      azureSubscription: 'Mythical-JAYPADDY-LAB'
      KeyVaultName: 'mythicalarcopskv'
      SecretsFilter: '*'
      RunAsPreJob: true

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '${{variables.pythonversion}}'
    displayName: 'Use Python ${{variables.pythonversion}}'

  - script: |
      python -m pip install --upgrade pip
    displayName: 'pip install upgrade'

  - script: |
      pip install pytest pytest-azurepipelines
      pip install pytest-cov
    displayName: 'install pytest'

  - script: |
      pip install -r requirements.txt
    displayName: 'install requirements.txt'
    workingDirectory: ${{ variables.workingDir }}

 # Action Rules 
  - script: |
      python -m pytest \
      --junitxml=$(Common.TestResultsDirectory)/${{ variables.unittest_reportprefix }}_actionrules_unittest-results.xml \
      --cov=. \
      --verbose \
      --cov-report=xml:$(Common.TestResultsDirectory)/${{ variables.unittest_reportprefix }}_actionrules_coverage.xml .
    displayName: 'Run unit test for Action Rules'
    workingDirectory: '${{ variables.workingDir }}'

  - task: PublishTestResults@2
    displayName: 'Publish unit test results for Action Rules'
    inputs:
      testResultsFiles: '**/*_actionrules_unittest-results.xml'
      testRunTitle: 'Unit tests'
      failTaskOnFailedTests: true
      searchFolder: $(Common.TestResultsDirectory)

  - task: Docker@2
    displayName: 'Build & Push Action Rules docker image'
    name: dockerBuild
    inputs:
      containerRegistry: mythicalconACRServiceConnection
      repository: '${{ variables.imageRepository }}/xactionrules'
      command: 'buildAndPush'
      Dockerfile: '${{variables.workingDir}}/MythicalScissorsActionRules/Dockerfile'

